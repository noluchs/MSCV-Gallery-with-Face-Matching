name: CI/CD Pipeline

on:
  push:
    paths:
      - 'code/**'
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest

      - name: Run tests
        run: python -m pytest

  build:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:19.03.12
        options: --privileged
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push Docker images
        run: |
          docker build -t ghcr.io/${{ github.repository }}/msvcfrontend:latest ./frontend
          docker build -t ghcr.io/${{ github.repository }}/msvcbackend:latest ./backend
          docker push ghcr.io/${{ github.repository }}/msvcfrontend:latest
          docker push ghcr.io/${{ github.repository }}/msvcbackend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Copy Docker Compose file
        run: scp ./compose.prod.yaml ec2-user@${{ secrets.DEPLOY_TARGET }}:/home/ec2-user/compose.prod.yaml

      - name: Deploy to EC2
        run: |
          ssh ec2-user@${{ secrets.DEPLOY_TARGET }} << 'EOF'
          docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GHCR_TOKEN  }}
          cd /home/ec2-user
          docker-compose -f compose.prod.yaml pull
          docker-compose -f compose.prod.yaml up -d
          EOF