version: '3.8'

services:
  db:
    image: mysql:latest
    container_name: mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - backend-network

  auth_service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: auth_service
    environment:
      - DATABASE_URL=mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql:3306/${MYSQL_DATABASE}
      - SECRET_KEY=${SECRET_KEY}
    volumes:
      - .:/app
    depends_on:
      - db
    ports:
      - "5000:5000"
    networks:
      - backend-network
    command: gunicorn -b 0.0.0.0:5000 app:create_app()

  gallery_service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gallery_service
    environment:
      - DATABASE_URL=mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql:3306/${MYSQL_DATABASE}
      - SECRET_KEY=${SECRET_KEY}
    volumes:
      - .:/app
    depends_on:
      - db
    ports:
      - "5001:5000"
    networks:
      - backend-network
    command: gunicorn -b 0.0.0.0:5000 app:create_app()

  image_service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: image_service
    environment:
      - DATABASE_URL=mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql:3306/${MYSQL_DATABASE}
      - SECRET_KEY=${SECRET_KEY}
    volumes:
      - .:/app
    depends_on:
      - db
    ports:
      - "5002:5000"
    networks:
      - backend-network
    command: gunicorn -b 0.0.0.0:5000 app:create_app()

  face_recognition_service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: face_recognition_service
    environment:
      - DATABASE_URL=mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql:3306/${MYSQL_DATABASE}
      - S3_KEY=${S3_KEY}
      - S3_SECRET=${S3_SECRET}
      - REGION=${REGION}
      - UPLOAD_BUCKET=${UPLOAD_BUCKET}
      - COMPARE_BUCKET=${COMPARE_BUCKET}
      - SECRET_KEY=${SECRET_KEY}
    volumes:
      - .:/app
    depends_on:
      - db
    ports:
      - "5003:5000"
    networks:
      - backend-network
    command: gunicorn -b 0.0.0.0:5000 app:create_app()

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: vue_frontend
    ports:
      - "8080:80"
    networks:
      - backend-network

networks:
  backend-network:
    driver: bridge

volumes:
  mysql_data: